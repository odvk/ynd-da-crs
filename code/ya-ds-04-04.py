#4. Возвращаемые значения функций
#Сейчас наши функции печатают результаты своей работы на экране. После этого мы никак не можем использовать значения, которые они считали. Как правило, это неудобно: например, не получится сохранить среднее в переменную для других расчётов.
#Поэтому функции умеют возвращать значение — передавать результат, который можно сохранить в переменной. Давайте, например, переделаем функцию пересчёта долларов в рубли и обновим код для печати бюджета в рублях:

rubles_for_dollar = 67.01

def dollars_to_rubles(dollars):
    rubles = dollars * rubles_for_dollar
    return rubles

titanic_dollars = 200.0
titanic_rubles = dollars_to_rubles(titanic_dollars)
print('Бюджет фильма "Титаник": {:.2f} млн ₽'.format(titanic_rubles))

# Ключевое слово return (англ. return, «возвращать») указывает, какое значение вернёт функция. Например, dollars_to_rubles() возвращает сохранённое в переменной rubles произведение.

#Функция работает по тому же принципу, что и такси — всегда выполняет один и тот же набор действий:
# 1 приезжает (адрес отправления — первый аргумент);
# 2 отвозит (пункт назначения — второй аргумент);
# 3 выставляет счёт (стоимость — возвращаемое значение).

# Если функция это такси, то вызов функции — вызов такси:
# адреса отправления и прибытия — это значения аргументов: они определяются в момент вызова;
# стоимость поездки — это возвращаемое значение.


