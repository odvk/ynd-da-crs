# 9. Новые столбцы (добавление элементов в список)
#Теперь перейдём к добавлению в таблицу новых столбцов.
#Мы уже научились изменять элементы списка, теперь нужно в каждый список-строку добавить новый элемент (соответствующий ячейке нового столбца). Для этого мы используем метод списка append() (англ. append, «добавить, присоединить»), добавляющий новый элемент в список. Разберём его сначала на простом примере:

emoji = [
    'Ухмыляюсь', 'Сияю от радости', 'Катаюсь от смеха', 'Слёзы радости' 
]

print(emoji)

emoji.append('Подмигиваю')

print(emoji)

#Метод append() добавляет свой аргумент в список как последний элемент.
#Вызывая метод append() в цикле, можно добавить новый столбец. Попробуем для нашей таблицы: посчитаем долю использований каждого эмодзи из столбца «EmojiXpress, млн».

data = [
    ['Ухмыляюсь', 2.26, 1.02, 87.3],
    ['Сияю от радости', 19.1, 1.69, 150.0],
    ['Катаюсь от смеха', 25.6, 0.774, 0.0],
    ['Слёзы радости', 233.0, 7.31, 2270.0],
    ['Подмигиваю', 15.2, 2.36, 264.0],
    ['Счастлив', 22.7, 4.26, 565.0],
    ['Глаза-сердца', 64.6, 11.2, 834.0],
    ['Целую', 87.5, 5.13, 432.0],
    ['Задумчивость', 6.81, 0.636, 0.0],
    ['Равнодушие', 6.0, 0.236, 478.0],
    ['Солнечные очки', 4.72, 3.93, 198.0],
    ['Громко плачу', 24.7, 1.35, 654.0],
    ['След от поцелуя', 21.7, 2.87, 98.7],
    ['Два сердца', 10.0, 5.69, 445.0],
    ['Сердце', 118.0, 26.0, 1080.0],
    ['Червы', 3.31, 1.82, 697.0],
    ['Класс', 23.1, 3.75, 227.0],
    ['Пожимаю плечами', 1.74, 0.11, 0.0],
    ['Огонь', 4.5, 2.49, 150.0],
    ['Переработка', 0.0333, 0.056, 932.0]
]

emojixpress_total = 1720

for i in range(len(data)):
    # Для обращения к столбцу с индексом 1 в строке с индексом i
    # используется двойное обращение по индексу: data[i][1]
    # data[i] - строка с индексом i
    # data[i][1] - ее ячейка с индексом 1
    part = data[i][1] / emojixpress_total
    data[i].append(part)
    
    
print('Название эмодзи  | EmojiXpress, млн | EmojiXpress, доля')
print('-------------------------------------------------------')
for row in data:
    print('{: <16} | {: >16.2f} | {: >17.1%}'.format(row[0], row[1], row[4]))
	
	

